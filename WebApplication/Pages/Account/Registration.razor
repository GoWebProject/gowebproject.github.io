@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.JSInterop;
@using WebApplication.Models
@inject IJSRuntime JsRuntime;
@inject NavigationManager _navigationManager

<form>
    <label for="name">Имя пользователя:</label><br>
    <input style="width: auto; @(madeAttempt && username.Length == 0 ? "border-color:red;" : "");" class="form-control input_user" @bind="username" type="text" id="username"><br><br>
    <label for="secondname">Полное Имя:</label><br>
    <input style="width: auto;@(madeAttempt && fullname.Length == 0 ? "border-color:red;" : "");" class="form-control input_user" @bind="fullname" type="text" id="fullname"><br><br>
    <label for="login">Почта:</label><br>
    <input style="width: auto; @(madeAttempt && email.Length == 0 && email.Contains('@') ? "border-color:red;" : "");" class="form-control input_user" @bind="email" type="text" id="email"><br><br>
    <label for="password">Пароль:</label><br>
    <input style="width: auto; @(madeAttempt && _pwd.Length == 0 ? "border-color:red;" : "");" class="form-control input_user" @bind="_pwd" type="password" id="password"><br><br>
</form>
<button class="btn btn-primary" @onclick="OnSubmitButtonClick">Зарегистрироваться</button>


@code{
    private bool madeAttempt = false;
    private string username = "";
    private string fullname = "";
    private string email = "";
    private string _pwd = "";

    void OnSubmitButtonClick()
    {
        if (!CheckCorrect())
        {
            if ((username.Length > 0) && (fullname.Length > 0) && (email.Length > 0) && (_pwd.Length > 0) && (email.Contains('@')))
            {
                JsRuntime.InvokeVoidAsync("alert", "Пользователь с таким именем есть");
            }
            else
            {
                if (!email.Contains('@') && (email.Length > 0))
                {
                    JsRuntime.InvokeVoidAsync("alert", "Email должен сожержать знак @");
                }
                else
                {
                    JsRuntime.InvokeVoidAsync("alert", "Заполните все поля!");
                }

                madeAttempt = true;
            }
        }
        else
        {
            _navigationManager.NavigateTo("/Account/Profile", true);
        }
    }

    private bool CheckCorrect()
    {
        if ((username.Length > 0) && (fullname.Length > 0) && (email.Length > 0) && (_pwd.Length > 0) && (email.Contains('@')))
        {
            return UserManager.CreateUser(new User(username, email, _pwd, fullname));
        }
        return false;
    }
}